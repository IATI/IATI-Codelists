# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

env:
  DEV_DEFAULT_KEY: ${{ secrets.DEV_CACHER_DEFAULT_KEY }} # Azure Functions default API Key for Redis-cacher
  PROD_DEFAULT_KEY: ${{ secrets.PROD_CACHER_DEFAULT_KEY }} # Azure Functions default API Key for Redis-cacher
  VERSION: 2.02

on:
  workflow_dispatch:
  push:
    paths-ignore: 
      - '**/README.rst' # don't run on README.rst file updates anywhere in repo
      - "**/dependabot.yml"
    branches: [v2.02/validatorCodelist]
  pull_request:
    paths-ignore: 
      - '**/README.rst' # don't run on README.rst file updates anywhere in repo
      - "**/dependabot.yml"
    branches: [v2.02/validatorCodelist]

concurrency: CI-validator-2.02

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          sudo apt-get -y install libxml2-dev libxslt-dev libxslt1-dev python3-dev python3-lxml libxml2-utils
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: xmllint
        run: xmllint --schema codelist.xsd --noout xml/*

      - name: flake8 lint
        run: flake8 --exclude=pyenv,pyenv3 --ignore E501

      - name: Build and test
        run: |
          ./gen.sh
          pytest tests

  cache-codelist-rules-dev:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }} # only push to the redis cache on PUSH
    steps:
      - uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: POST codelist_rules.json to func-iati-redis-cacher-dev
        run: | 
          FILE_COMMIT_SHA=$(git log -1 --format='%H' -- './codelist_rules.json')
          echo $FILE_COMMIT_SHA
          HTTP_CODE=$(curl --write-out "%{http_code}\n" \
          --location --request POST 'https://func-iati-redis-cacher-dev.azurewebsites.net/api/pvt/cache?key=codelistRules'$VERSION'&commitsha='$FILE_COMMIT_SHA \
          --header 'x-functions-key: '$DEV_DEFAULT_KEY \
          --header 'Content-Type: application/json' \
          --data-binary '@./codelist_rules.json' \
          --output curl_out.txt \
          --silent )
          echo $HTTP_CODE
          if [[ $HTTP_CODE != '200' ]] ; then
            echo "Reponse is not 200 from func-iati-redis-cacher-dev, check error logs"
            cat curl_out.txt
            exit 1
          fi

  cache-codelist-rules-PROD:
    needs: cache-codelist-rules-dev
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }} # only push to the redis cache on PUSH
    steps:
      - uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: POST codelist_rules.json to func-iati-redis-cacher-PROD
        run: | 
          FILE_COMMIT_SHA=$(git log -1 --format='%H' -- './codelist_rules.json')
          echo $FILE_COMMIT_SHA
          HTTP_CODE=$(curl --write-out "%{http_code}\n" \
          --location --request POST 'https://func-iati-redis-cacher-prod.azurewebsites.net/api/pvt/cache?key=codelistRules'$VERSION'&commitsha='$FILE_COMMIT_SHA \
          --header 'x-functions-key: '$PROD_DEFAULT_KEY \
          --header 'Content-Type: application/json' \
          --data-binary '@./codelist_rules.json' \
          --output curl_out.txt \
          --silent )
          echo $HTTP_CODE
          if [[ $HTTP_CODE != '200' ]] ; then
            echo "Reponse is not 200 from func-iati-redis-cacher-PROD, check error logs"
            cat curl_out.txt
            exit 1
          fi

  update-rule-tracker:
      needs: build
      runs-on: ubuntu-latest
      if: ${{ github.event_name == 'push' }} # only push to the rule tracker on PUSH
      steps:
        - name: 'Trigger update of rule tracker repo .csv'
          run: |
            curl -X POST https://api.github.com/repos/IATI/validator-rule-tracker/dispatches \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -u ${{ secrets.NJO_PAT }} \
            --data '{"event_type": "update", "client_payload": { "resourceName": "codelists", "repo": "'"$GITHUB_REPOSITORY"'", "sha": "'"$GITHUB_SHA"'"}}'
